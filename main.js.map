{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/model/cliente.model.ts","./src/app/model/dados.model.ts","./src/app/model/dadosEmpresa.model.ts","./src/app/model/formulario.model.ts","./src/app/model/index.ts","./src/app/model/referenciaPessoal.model.ts","./src/app/template/template.component.ts","./src/app/utils/Utils.ts","./src/app/viewer-pdf/viewer-pdf.component.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm/ lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { ViewerPdfComponent } from './viewer-pdf/viewer-pdf.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'viewer', component: ViewerPdfComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { NgxExtendedPdfViewerModule } from 'ngx-extended-pdf-viewer';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { ButtonModule } from 'primeng/button';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { CalendarModule } from 'primeng/calendar';\n\nimport { NgxMaskModule, IConfig } from 'ngx-mask';\n\nimport { TableModule } from 'primeng/table';\nimport { TabViewModule } from 'primeng/tabview';\nimport { AccordionModule } from 'primeng/accordion';\n\nimport { MenubarModule } from 'primeng/menubar';\nimport { DialogModule } from 'primeng/dialog';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\nimport { ToastModule } from 'primeng/toast';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\n\nimport { DatePipe, registerLocaleData } from '@angular/common';\nimport { LOCALE_ID } from '@angular/core';\nimport localePt from '@angular/common/locales/pt';\n\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TemplateComponent } from './template/template.component';\nimport { ViewerPdfComponent } from './viewer-pdf/viewer-pdf.component';\nimport { HomeComponent } from './home/home.component';\n\nconst maskConfig: Partial<IConfig> = {\n  validation: true,\n};\n\nregisterLocaleData(localePt);\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        TemplateComponent,\n        ViewerPdfComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        NgxExtendedPdfViewerModule,\n        HttpClientModule,\n        FormsModule,\n        InputTextModule,\n        InputNumberModule,\n        InputTextareaModule,\n        ButtonModule,\n        SelectButtonModule,\n        CalendarModule,\n        TableModule,\n        TabViewModule,\n        AccordionModule,\n        MenubarModule,\n        DialogModule,\n        ConfirmDialogModule,\n        ConfirmPopupModule,\n        ToastModule,\n        MessagesModule,\n        MessageModule,\n        NgxMaskModule.forRoot(maskConfig),\n        IonicModule.forRoot(),\n        AppRoutingModule\n    ],\n    providers: [\n        DatePipe,\n        ConfirmationService,\n        MessageService,\n        { provide: LOCALE_ID, useValue: 'pt-BR' },\n        { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Platform, ToastController, AlertController, ActionSheetController } from '@ionic/angular';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DatePipe } from '@angular/common';\nimport { NgForm } from '@angular/forms';\nimport { TemplateComponent } from '../template/template.component';\nimport { Formulario } from '../model/formulario.model';\nimport { Cliente } from '../model/cliente.model';\nimport { Utils } from '../utils/Utils';\nimport {\n  ConfirmationService,\n  MenuItem,\n  MessageService,\n  PrimeIcons,\n  PrimeNGConfig\n} from 'primeng/api';\n\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HomeComponent implements OnInit {\n\n  static readonly formularioKey: string = 'formulario';\n\n  @ViewChild('pdfTemplate', { static: false }) templateComponent: TemplateComponent;\n  @ViewChild('formFormulario', { static: true }) formFormulario: NgForm;\n\n  title = 'CIVPRO';\n  items: MenuItem[];\n  estadoCivilOpcoes: any[];\n  formulario = new Formulario();\n\n  constructor(\n    public domSanitizer: DomSanitizer,\n    private router: Router,\n    private platform: Platform,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private primengConfig: PrimeNGConfig,\n    private toastController: ToastController,\n    private datepipe: DatePipe,\n    private alertController: AlertController,\n    private actionSheetController: ActionSheetController\n  ) {\n    this.estadoCivilOpcoes = [\n      { label: 'Solteiro', value: 'Solteiro' },\n      { label: 'Casado', value: 'Casado' },\n      { label: 'Outros', value: 'Outros' }\n    ];\n\n    this.platform.backButton.subscribeWithPriority(10, () => {\n      this.router.navigateByUrl('home');\n    });\n  }\n\n  ngOnInit() {\n    console.log(this.platform.platforms());\n    this.primengConfig.ripple = true;\n    this.carregarItemsMenu();\n    this.recuperarEstadoFormulario();\n  }\n\n  recuperarEstadoFormulario() {\n    const formulario = localStorage.getItem(HomeComponent.formularioKey);\n    if (formulario != null) {\n      this.formulario = JSON.parse(formulario);\n    }\n  }\n\n  activeMenu(event: any) {\n    if (event.target.id === 'carregar') {\n      this.carregar();\n    }\n  }\n\n  carregar() {\n    const file = document.getElementById('file');\n    const clickEvent = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    file.dispatchEvent(clickEvent);\n  }\n\n  carregarFormulario(files: FileList) {\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      const result = fileReader.result.toString();\n      localStorage.setItem(HomeComponent.formularioKey, result);\n      this.formulario = JSON.parse(result);\n      for (const cliente of this.formulario.dadosClientes) {\n        cliente.dados.dataNascimento = new Date(cliente.dados.dataNascimento);\n      }\n    };\n    fileReader.readAsText(files.item(0));\n  }\n\n  async baixarFormulario() {\n\n    const dateFormated = this.datepipe.transform(new Date(), 'dd_MM_yyyy HH_mm_ss');\n    const filename = dateFormated + '.json';\n    const json = JSON.stringify(this.formulario);\n    const base64 = Utils.b64EncodeUnicode(json);\n\n    await Utils.salvarArquivo(filename, 'text/plain', base64,\n      this.platform, async () => {\n        await Utils.notificacao('Formulario baixado com sucesso.', this.platform, this.toastController);\n      });\n  }\n\n  gerarArquivoZipado() {\n    const zip = new JSZip();\n\n    const dateFormated = this.datepipe.transform(new Date(), 'dd_MM_yyyy HH_mm_ss');\n    const filenameJson = dateFormated + '.json';\n\n    const json = JSON.stringify(this.formulario);\n    const base64Json = Utils.b64EncodeUnicode(json);\n    zip.file(filenameJson, base64Json, { base64: true });\n\n    const filenamePDF = dateFormated + '.pdf';\n\n    this.templateComponent.gerarPdfBase64().then(\n      result => {\n        zip.file(filenamePDF, result, { base64: true });\n\n        zip.generateAsync({ type: \"blob\" })\n          .then(function (content) {\n            saveAs(content, dateFormated + '.zip');\n          });\n      }\n    );\n  }\n\n  exportar() {\n    if (!this.formFormulario.form.valid) {\n      this.confirmarExporta();\n    } else {\n      this.gerarPdf();\n    }\n  }\n\n  gerarPdf() {\n    console.log(this.formulario);\n\n    localStorage.setItem(HomeComponent.formularioKey, JSON.stringify(this.formulario));\n    this.templateComponent.gerarPdf();\n  }\n\n  async confirmaNovoFormulario() {\n    await Utils.dialog('Atenção!', 'Tem certeza de que deseja continuar? \\nO formulário atual será descartado.', async () => {\n      localStorage.removeItem(HomeComponent.formularioKey);\n      this.formulario = new Formulario();\n      await Utils.notificacao('Um novo formulario foi gerado.', this.platform, this.toastController, this.messageService);\n    }, this.platform, this.alertController, this.confirmationService);\n  }\n\n  async confirmarExporta() {\n    await Utils.dialog('Atenção!', 'Ainda possui campos obrigatórios não preenchidos.\\nDeseja continuar?', async () => {\n      this.gerarPdf();\n    }, this.platform, this.alertController, this.confirmationService);\n  }\n\n  uploadLogo(files: FileList) {\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      this.formulario.imagem = 'data:image/png;base64, ' + btoa(fileReader.result.toString());\n    };\n    fileReader.readAsBinaryString(files.item(0));\n  }\n\n  gerarCliente2() {\n    const clientes = this.formulario.dadosClientes;\n\n    const primeiroCliente = clientes[0];\n    delete primeiroCliente.dados.estadocivilespecifico;\n    delete primeiroCliente.dados.regimeComunhao;\n\n    if (clientes.length > 1) {\n      clientes.splice(2, 1);\n    } else {\n      clientes.push(new Cliente());\n    }\n  }\n\n  carregarItemsMenu() {\n    this.items = [\n      {\n        id: 'novo',\n        label: 'Novo',\n        icon: PrimeIcons.PLUS,\n        command: (event: Event) => { this.confirmaNovoFormulario(); }\n      },\n      {\n        id: 'carregar',\n        label: 'Carregar',\n        icon: PrimeIcons.UPLOAD,\n      },\n      {\n        id: 'salvar',\n        label: 'Salvar',\n        icon: PrimeIcons.SAVE,\n        command: (event: Event) => { this.baixarFormulario(); }\n      },\n      {\n        id: 'exportar',\n        label: 'Exportar',\n        icon: PrimeIcons.FILE_PDF,\n        target: 'file',\n        command: (event: Event) => { this.exportar(); }\n      }\n    ];\n  }\n\n  validarCpf(event: any) {\n    const name = event.target.attributes['ng-reflect-name'].value;\n\n    if (Utils.validateCPF(event.target.value)) {\n      this.formFormulario.form.controls[name].setErrors(null);\n    } else {\n      this.formFormulario.form.controls[name].setErrors({ incorrect: true });\n    }\n  }\n\n  async presentOptionsActionSheet() {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Opções',\n      buttons: [{\n        text: 'Novo',\n        role: 'novo',\n        icon: this.isPlataformMobileAndroid() ? 'add-circle-outline' : '',\n        handler: () => {\n          this.confirmaNovoFormulario();\n        }\n      }, {\n        text: 'Carregar',\n        icon: this.isPlataformMobileAndroid() ? 'push-outline' : '',\n        handler: () => {\n          this.carregar();\n        }\n      }, {\n        text: 'Salvar',\n        icon: this.isPlataformMobileAndroid() ? 'save-outline' : '',\n        handler: () => {\n          this.baixarFormulario();\n        }\n      }, \n      {\n        text: 'Exportar',\n        icon: this.isPlataformMobileAndroid() ? 'document-text-outline' : '',\n        handler: () => {\n          this.exportar();\n        }\n      }, {\n        text: 'Cancelar',\n        icon: 'close',\n        role: 'cancelar',\n        handler: () => { }\n      }]\n    });\n    await actionSheet.present();\n\n    const { role, data } = await actionSheet.onDidDismiss();\n    console.log('onDidDismiss resolved with role and data', role, data);\n  }\n\n  isPlataformMobile(): boolean {\n    return this.isPlataformMobileIos() || this.isPlataformMobileAndroid();\n  }\n\n  isPlataformMobileIos(): boolean {\n    return this.platform.is('ios');\n  }\n\n  isPlataformMobileAndroid(): boolean {\n    return this.platform.is('android');\n  }\n}\n","import { Dados, DadosEmpresa, ReferenciaPessoal } from '.';\n\nexport class Cliente {\n    dados: Dados;\n    dadosEmpresa: DadosEmpresa;\n    referenciaPessoal: ReferenciaPessoal[];\n\n    constructor() {\n        this.dados = new Dados();\n        this.dadosEmpresa = new DadosEmpresa();\n\n        this.referenciaPessoal = new Array();\n        this.referenciaPessoal.push(new ReferenciaPessoal());\n        this.referenciaPessoal.push(new ReferenciaPessoal());\n    }\n}\n","export class Dados {\n    nome: string;\n    email: string;\n    telefone: string;\n    endereco: string;\n    cpf: string;\n    rg: string;\n    dataNascimento: Date;\n    formacao: string;\n    estadocivil: string;\n    estadocivilespecifico: string;\n    regimeComunhao: string;\n}\n","export class DadosEmpresa {\n    razaoSocial: string;\n    endereco: string;\n    funcao: string;\n    salario: number;\n    email: string;\n    telefone: string;\n}\n","import { Cliente } from './cliente.model';\n\nexport class Formulario {\n    imagem: string;\n    titulo: string;\n    empreendimento: string;\n    unidade: string;\n    dadosClientes: Cliente[];\n    valorImovel: number;\n    formaPagamento: string;\n\n    constructor() {\n        this.titulo = 'PROPOSTA DE COMPRA DO IMOVEL';\n        this.dadosClientes = new Array();\n        this.dadosClientes.push(new Cliente());\n        this.imagem = 'data:image/png;base64, ';\n    }\n}\n","export * from './formulario.model';\nexport * from './dados.model';\nexport * from './dadosEmpresa.model';\nexport * from './referenciaPessoal.model';\n","export class ReferenciaPessoal {\n    nome: string;\n    telefone: string;\n}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { Platform, ToastController } from '@ionic/angular';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Formulario } from '../model';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport htmlToPdfmake from 'html-to-pdfmake';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css']\n})\nexport class TemplateComponent {\n\n  @Input() formulario: Formulario;\n\n  @ViewChild('pdfTemplate') pdfTemplate: ElementRef;\n\n  constructor(\n    private router: Router,\n    public domSanitizer: DomSanitizer,\n    public toastController: ToastController,\n    public platform: Platform,\n    public datepipe: DatePipe\n  ) { }\n\n  gerarPdf() {\n    const pdfDocGenerator = this.createPDF();\n\n    if (this.platform.is('ios') || this.platform.is('android')) {\n      pdfDocGenerator.getBase64((data: any) => {\n        const dateFormated = this.datepipe.transform(new Date(), 'dd_MM_yyyy HH_mm_ss');\n        const filename = dateFormated + '.pdf';\n\n        this.router.navigateByUrl('viewer', {\n          state: { data: { name: filename, base64: data } }\n        });\n      });\n    } else {\n      pdfDocGenerator.open();\n    }\n  }\n\n  gerarPdfBase64(): Promise<any> {\n    const pdfDocGenerator = this.createPDF();\n\n    return new Promise(function (resolve) {\n      pdfDocGenerator.getBase64((data: any) => {\n        resolve(data)\n      });\n    });\n  }\n\n  createPDF(): any {\n    const innerHTML = this.pdfTemplate.nativeElement.innerHTML;\n\n    const options = {\n      defaultStyles: {\n        table: { margin: [-5, 0, 0, 0] }\n      }\n    };\n\n    const html = htmlToPdfmake(innerHTML, options);\n    html[0].table.widths = '*';\n\n    console.log(html);\n    const documentDefinition = {\n      content: html,\n\n      // a string or { width: number, height: number }\n      pageSize: 'B4',\n\n      // by default we use portrait, you can change it to landscape if you wish\n      pageOrientation: 'portrait',\n\n      // [left, top, right, bottom] or [horizontal, vertical] or just a number for equal margins\n      pageMargins: [35, 30, 30, 25],\n\n      pageNumbers: [1]\n    };\n\n    return pdfMake.createPdf(documentDefinition);\n  }\n}\n","import { Directory, Filesystem } from '@capacitor/filesystem';\nimport { Platform, ToastController, AlertController } from '@ionic/angular';\nimport { Confirmation, ConfirmationService, MessageService } from 'primeng/api';\n\nexport class Utils {\n\n  public static async notificacao(mensagem: string, platform: Platform,\n    toastController?: ToastController, messageService?: MessageService) {\n    if (platform.is('ios') || platform.is('android')) {\n      if (toastController !== undefined) {\n        const toast = await toastController.create({\n          message: mensagem,\n          duration: 2000\n        });\n        toast.present();\n      }\n    } else {\n      if (messageService !== undefined) {\n        messageService.add({\n          severity: 'success',\n          summary: 'Sucesso',\n          detail: mensagem\n        });\n      }\n    }\n  }\n\n  public static async dialog(titulo: string, mensagem: string, handlerAccept: any,\n    platform: Platform, alertController: AlertController, confirmationService: ConfirmationService) {\n    if (platform.is('ios') || platform.is('android')) {\n      const alert = await alertController.create({\n        header: titulo,\n        message: mensagem,\n        buttons: [\n          {\n            text: 'Cancelar',\n            role: 'Cancelar',\n            cssClass: 'secondary',\n            id: 'cancel-button',\n          }, {\n            text: 'Ok',\n            id: 'confirm-button',\n            handler: () => {\n              handlerAccept();\n            }\n          }\n        ]\n      });\n\n      await alert.present();\n    } else {\n      const confirmation: Confirmation = {\n        header: titulo,\n        message: mensagem,\n        icon: 'pi pi-exclamation-triangle',\n        rejectLabel: 'Não',\n        rejectIcon: 'pi pi-times',\n        acceptLabel: 'Sim',\n        acceptIcon: 'pi pi-check',\n        defaultFocus: 'reject',\n        acceptButtonStyleClass: 'p-button-text p-button-secondary',\n        accept: () => {\n          handlerAccept();\n        }\n      };\n\n      confirmationService.confirm(confirmation);\n    }\n  }\n\n  public static async salvarArquivo(filename: string, filetype: string,\n    base64: string, platform: Platform, callbackSucesso?: any,) {\n    if (!platform.is('mobileweb') && (platform.is('ios') || platform.is('android'))) {\n      try {\n        await Filesystem.writeFile({\n          path: filename,\n          data: 'data:' + filetype + ';base64,' + base64,\n          directory: Directory.Documents\n        });\n      } catch (e) {\n        console.error('Erro ao salvar arquivo: ' + filename, e);\n      }\n    } else {\n      \n      const a = document.createElement('a');\n      const dataURI = 'data:' + filetype + ';base64,' + base64;\n      a.href = dataURI;\n      a.download = filename;\n\n      const clickEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: false\n      });\n      a.dispatchEvent(clickEvent);\n      a.remove();\n    }\n\n    if (callbackSucesso !== undefined) {\n      callbackSucesso();\n    }\n  };\n\n  public static validateCPF(value: string): boolean {\n    const cpf = value.replace(/[^\\d]+/g, '');\n    let i = 0;\n    let add = 0;\n    let rev = 0;\n    if (cpf === '') {\n      return false;\n    }\n    if (cpf.length !== 11 ||\n      cpf === '00000000000' ||\n      cpf === '11111111111' ||\n      cpf === '22222222222' ||\n      cpf === '33333333333' ||\n      cpf === '44444444444' ||\n      cpf === '55555555555' ||\n      cpf === '66666666666' ||\n      cpf === '77777777777' ||\n      cpf === '88888888888' ||\n      cpf === '99999999999') {\n      return false;\n    }\n\n    for (i = 0; i < 9; i++) {\n      add += +cpf.charAt(i) * (10 - i);\n    }\n\n    rev = 11 - (add % 11);\n\n    if (rev === 10 || rev === 11) {\n      rev = 0;\n    }\n\n    if (rev !== +cpf.charAt(9)) {\n      return false;\n    }\n\n    add = 0;\n\n    for (i = 0; i < 10; i++) {\n      add += +cpf.charAt(i) * (11 - i);\n    }\n\n    rev = 11 - (add % 11);\n\n    if (rev === 10 || rev === 11) {\n      rev = 0;\n    }\n\n    if (rev !== +cpf.charAt(10)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  public static b64EncodeUnicode(str) {\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n      const charset = '0x' + p1;\n      return String.fromCharCode(parseInt(charset, 16));\n    }));\n  }\n}\n","import { Platform, ToastController } from '@ionic/angular';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Utils } from '../utils/Utils';\n\n@Component({\n  selector: 'app-viewer-pdf',\n  templateUrl: './viewer-pdf.component.html',\n  styleUrls: ['./viewer-pdf.component.scss'],\n})\nexport class ViewerPdfComponent implements OnInit {\n  title = 'CIVPRO';\n  data: any;\n  pdfSrc: any;\n\n  constructor(\n    private router: Router,\n    private platform: Platform,\n    private toastController: ToastController\n  ) {\n    const nav = this.router.getCurrentNavigation();\n    this.data = nav?.extras?.state?.data;\n  }\n\n  ngOnInit() {\n    this.pdfSrc = this.data?.base64;\n  }\n\n  exportarPDF() {\n    const filename = this.data.name;\n    const base64 = this.data.base64;\n\n    Utils.salvarArquivo(filename, 'application/pdf', base64,\n      this.platform, async () => {\n        await Utils.notificacao('Formulario exportado com sucesso.', this.platform, this.toastController);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t79,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t5593,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t3225,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t4812,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t6655,\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t4856,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t3059,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t8648,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t8308,\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t4690,\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t4090,\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t6214,\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t9447,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime-button.entry.js\": [\n\t\t7950,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-9a48ce79_js-node_modules_ionic_core_dist_esm_t-36d8fd\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime-button_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t9689,\n\t\t\"default-node_modules_ionic_core_dist_esm_parse-9a48ce79_js-node_modules_ionic_core_dist_esm_t-36d8fd\",\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t8840,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t749,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t9667,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t3288,\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t5473,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t3634,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t2855,\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t495,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t8737,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t9632,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t4446,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t2275,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t8050,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t8994,\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t3592,\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t5454,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t290,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t2666,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t4816,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t5534,\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t4902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t1938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t8179,\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t668,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t1624,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t9989,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t8902,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t199,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t8395,\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t6357,\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t8268,\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t5269,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t2875,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 863;\nmodule.exports = webpackAsyncContext;"],"names":["Component","ViewChild","ViewEncapsulation","Router","Platform","ToastController","AlertController","ActionSheetController","DomSanitizer","DatePipe","Formulario","Cliente","Utils","ConfirmationService","MessageService","PrimeIcons","PrimeNGConfig","saveAs","JSZip","HomeComponent","constructor","domSanitizer","router","platform","confirmationService","messageService","primengConfig","toastController","datepipe","alertController","actionSheetController","estadoCivilOpcoes","label","value","backButton","subscribeWithPriority","navigateByUrl","ngOnInit","console","log","platforms","ripple","carregarItemsMenu","recuperarEstadoFormulario","formulario","localStorage","getItem","formularioKey","JSON","parse","activeMenu","event","target","id","carregar","file","document","getElementById","clickEvent","MouseEvent","view","window","bubbles","cancelable","dispatchEvent","carregarFormulario","files","fileReader","FileReader","onload","e","result","toString","setItem","cliente","dadosClientes","dados","dataNascimento","Date","readAsText","item","baixarFormulario","dateFormated","transform","filename","json","stringify","base64","b64EncodeUnicode","salvarArquivo","notificacao","gerarArquivoZipado","zip","filenameJson","base64Json","filenamePDF","templateComponent","gerarPdfBase64","then","generateAsync","type","content","exportar","formFormulario","form","valid","confirmarExporta","gerarPdf","confirmaNovoFormulario","dialog","removeItem","uploadLogo","imagem","btoa","readAsBinaryString","gerarCliente2","clientes","primeiroCliente","estadocivilespecifico","regimeComunhao","length","splice","push","items","icon","PLUS","command","UPLOAD","SAVE","FILE_PDF","validarCpf","name","attributes","validateCPF","controls","setErrors","incorrect","presentOptionsActionSheet","actionSheet","create","header","buttons","text","role","isPlataformMobileAndroid","handler","present","data","onDidDismiss","isPlataformMobile","isPlataformMobileIos","is","args","static","selector","template","encapsulation","None","Directory","Filesystem","mensagem","undefined","toast","message","duration","add","severity","summary","detail","titulo","handlerAccept","alert","cssClass","confirmation","rejectLabel","rejectIcon","acceptLabel","acceptIcon","defaultFocus","acceptButtonStyleClass","accept","confirm","filetype","callbackSucesso","writeFile","path","directory","Documents","error","a","createElement","dataURI","href","download","remove","cpf","replace","i","rev","charAt","str","encodeURIComponent","match","p1","charset","String","fromCharCode","parseInt","ViewerPdfComponent","nav","getCurrentNavigation","extras","state","pdfSrc","exportarPDF"],"sourceRoot":"webpack:///","x_google_ignoreList":[15]}