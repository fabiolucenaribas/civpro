# This is a basic workflow to help you get started with Actions
name: 'Build Electron'

# Controls when the action will run.
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: write

jobs:
  build-windows:
    name: Windows Build
    strategy:
      matrix:
        node-version: [16]

    # The type of runner that the job will run on
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm`
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: npm i

    - name: Check lint
      run: npm run lint

    - name: Run headless unit test
      run: npm run test

    - name: Run headless e2e test
      run: npm run e2e

    - name: Build the app
      run: npm run electron:build

    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release_windows.zip'
        path: 'release'
        exclusions: '*/*.yml */win-unpacked */.icon-ico'

    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release_windows.zip

  build-ubuntu:
    name: Linux Build
    strategy:
      matrix:
        node-version: [16]

    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

    - name: Install Dependencies
      run: npm i

    - name: Check lint
      run: npm run lint

    - name: Run headless unit test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run test

    - name: Run headless e2e test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: npm run e2e

    - name: Build the app
      run: npm run electron:build

    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release_ubuntu.zip'
        path: 'release'
        exclusions: '*.yml* /*linux-unpacked/*'

    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release_ubuntu.zip

  build-macos:
    name: MacOS Build
    strategy:
      matrix:
        node-version: [16]

    # The type of runner that the job will run on
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: npm i && npm i -D cli-truncate iconv-corefoundation

    - name: Check lint
      run: npm run lint

    - name: Build the app
      run: npm run electron:build

    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: 'release_macos.zip'
        path: 'release'
        exclusions: '*.blockmap* *.yml* /*mac/* /*.icon-icns/*'

    - name: Upload Artifact
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: release
        path: release_macos.zip

  release:
    name: Push Release
    runs-on: ubuntu-latest
    needs: [build-windows, build-ubuntu, build-macos]
    steps:
      - name: Download Release
        uses: actions/download-artifact@v1
        with:
          name: release

      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "release/release_windows.zip, release/release_ubuntu.zip, release/release_macos.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
